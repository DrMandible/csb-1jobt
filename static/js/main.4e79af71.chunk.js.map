{"version":3,"sources":["server.js","styled.js","components/GroupListItem.js","components/GroupList.js","utils.js","views/CharacterSheet.js","App.js","index.js"],"names":["URL_BASE","getCharacterData","a","axios","get","catch","error","response","console","log","data","status","headers","request","message","res","saveCharacterData","char","post","name","id","charInfo","JSON","parse","config","getGroupData","group","ToggleLight","styled","div","props","toggle","statScoreToModScore","statScore","GroupListItem","useState","showAll","setShowAll","toggleShowAll","oneLine","document","getElementById","label","style","width","maxHeight","stylestyle","url","source","playbooks","String","replaceAll","type","useEffect","ItemSelectButton","groupName","editMode","hasItem","onClick","e","handleUpdateGroupList","newValue","role","Subtitle","className","alignContent","justifyContent","fontSize","color","padding","subtitle","display","flexGrow","marginRight","tags","weight","price","Score","score","cursor","margin","rollWith","alert","href","rel","target","textDecoration","description","marginLeft","getCharHasList","groupList","groupData","charHasList","map","groupItemName","groupItem","GroupList","isLoading","setIsLoading","errs","setErrs","setGroupList","setGroupData","groupTracker","setGroupTracker","setEditMode","isAddingNewGroupItem","toggleEditMode","handleErrs","err","action","newErrs","includes","filter","newGroupList","server","newGroupData","getAllChars","maxLoad","obj","field","entry","utils","abilities","currentLoad","gear","reduce","b","maxSpellLevels","level","currentSpellLevels","spell","length","handleGroupTracker","textAlign","borderBottom","toUpperCase","newCharState","setChar","handleSaveChanges","Object","values","webURL","getJSONFieldByName","CharacterSheet","displayMode","race","playbook","alignment","xp","basehp","bonds","bond","App","allChars","setAllChars","charName","ch","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.4e79af71.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst URL_BASE = `https://home-bayes.glitch.me/api/dw`;\r\n\r\nexport const getCharacterData = async () => {\r\n  const res = await axios.get(`${URL_BASE}/chars`).catch(function (error) {\r\n    if (error.response) {\r\n      console.log(\"Request made and server responded\");\r\n      console.log(error.response.data);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n    } else if (error.request) {\r\n      console.log(\"The request was made but no response was received\");\r\n      console.log(error.request);\r\n    } else {\r\n      console.log(\r\n        \"Something happened in setting up the request that triggered an Error\"\r\n      );\r\n      console.log(\"Error\", error.message);\r\n    }\r\n  });\r\n  console.log(res);\r\n  return res.data;\r\n};\r\n\r\nexport const saveCharacterData = async (char) => {\r\n  const res = await axios.post(\r\n    `${URL_BASE}/chars/${char.name}`,\r\n    { id: 0, charInfo: [char] },\r\n    {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }\r\n  );\r\n  console.log(JSON.parse(res.config.data));\r\n  return res;\r\n};\r\n\r\nexport const getGroupData = async (group) => {\r\n  // console.log(\"*****\");\r\n  // console.log(`${URL_BASE}/groups/${group}`);\r\n  const res = await axios.get(`${URL_BASE}/groups/${group}`);\r\n  // console.log(res);\r\n  // console.log(\"*****\");\r\n  return res;\r\n};\r\n\r\nexport const saveGroupData = async (groupData) => {\r\n  console.log(\"saving group: \", groupData.name, groupData);\r\n  // const res = await axios.post(`${URL_BASE}/groups/${group.name}`, group, {\r\n  //   headers: {\r\n  //     \"Content-Type\": \"application/json\"\r\n  //   }\r\n  // });\r\n  // return res;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ToggleLight = styled.div`\r\n  cursor: pointer;\r\n  padding: 0.3rem;\r\n  margin-right: 0.1rem;\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  text-align: center;\r\n  text-justify: center;\r\n  justify-content: center;\r\n  align-content: center;\r\n  background-color: ${(props) =>\r\n    props.toggle ? `rgb(220, 230, 220)` : `rgb(230, 220, 220)`};\r\n\r\n  :hover {\r\n    border-bottom: 1px solid black;\r\n    border-right: 1px solid black;\r\n  }\r\n`;\r\n\r\nexport const ToggleTag = styled(ToggleLight)`\r\n  width: auto;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as SC from \"../styled\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nconst statScoreToModScore = (statScore) => {\r\n  if (!statScore) return \"\";\r\n  if (statScore < 4) return \"-3\";\r\n  if (statScore < 6) return \"-2\";\r\n  if (statScore < 9) return \"-1\";\r\n  if (statScore < 13) return \"0\";\r\n  if (statScore < 16) return \"+1\";\r\n  if (statScore < 18) return \"+2\";\r\n  return \"+3\";\r\n};\r\n\r\nconst GroupListItem = (props) => {\r\n  const [showAll, setShowAll] = useState(false);\r\n\r\n  const toggleShowAll = () => {\r\n    if (props.oneLine) return <div />;\r\n    if (document.getElementById(`group-list-item-container-${props.label}`)) {\r\n      if (!showAll) {\r\n        document.getElementById(\r\n          `group-list-item-container-${props.label}`\r\n        ).stylestyle = { width: \"100%\", maxHeight: \"auto\" };\r\n      } else {\r\n        document.getElementById(\r\n          `group-list-item-container-${props.label}`\r\n        ).style = { width: \"46%\", maxHeight: \"3rem\" };\r\n      }\r\n    }\r\n    if (!props.oneLine) setShowAll(!showAll);\r\n  };\r\n\r\n  let url = null;\r\n  const getUrl = () => {\r\n    if (props.source === \"Custom\") return null;\r\n    if (props.source === \"Core\") {\r\n      url = `https://www.dungeonworldsrd.com/`;\r\n    }\r\n\r\n    if (props.playbooks && props.playbooks[0]) {\r\n      url += `classes/${props.playbooks[0]}/#${String(props.label).replaceAll(\r\n        \" \",\r\n        \"_\"\r\n      )}`;\r\n    } else {\r\n      if (props.type === \"Weapon\") {\r\n        url += `Equipment/#Weapon_List`;\r\n      } else {\r\n        url += `Equipment/#${String(props.type).replaceAll(\" \", \"_\")}`;\r\n      }\r\n    }\r\n    return url;\r\n  };\r\n  url = getUrl();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const ItemSelectButton = () => {\r\n    if (props.groupName === \"abilities\") return <div />;\r\n    return (\r\n      <div>\r\n        {props.editMode ? (\r\n          <SC.ToggleLight\r\n            toggle={props.hasItem}\r\n            onClick={(e) =>\r\n              props.handleUpdateGroupList({\r\n                group: props.groupName,\r\n                newValue: props.label\r\n              })\r\n            }\r\n          >\r\n            <span role=\"image\">{props.hasItem ? \"✔️\" : \"❌\"}</span>\r\n          </SC.ToggleLight>\r\n        ) : (\r\n          <div />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Subtitle = () => {\r\n    if (props.oneLine)\r\n      return (\r\n        <div\r\n          className=\"clickable\"\r\n          onClick={toggleShowAll}\r\n          style={{\r\n            alignContent: \"flex-end\",\r\n            justifyContent: \"flex-end\",\r\n            fontSize: \"0.8rem\",\r\n            color: \"rgb(10, 10, 10)\",\r\n            padding: \"0 0.2rem\"\r\n          }}\r\n        >\r\n          {props.subtitle && (\r\n            <ReactMarkdown>{String(props.subtitle)}</ReactMarkdown>\r\n          )}\r\n        </div>\r\n      );\r\n    return (\r\n      <div\r\n        className=\"clickable\"\r\n        onClick={toggleShowAll}\r\n        style={{\r\n          display: \"flex\",\r\n          fontSize: \"0.8rem\",\r\n          color: \"rgb(10, 10, 10)\",\r\n          padding: \"0 0.2rem\"\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", flexGrow: 1 }}>\r\n          {props.playbooks[0] && (\r\n            <div style={{ marginRight: \"0.2rem\" }}>\r\n              <ReactMarkdown>{String(props.playbooks)}</ReactMarkdown>\r\n            </div>\r\n          )}\r\n          {props.subtitle && (\r\n            <div style={{ marginRight: \"0.2rem\" }}>\r\n              <ReactMarkdown>{String(props.subtitle)}</ReactMarkdown>\r\n            </div>\r\n          )}\r\n          {props.tags[0] && (\r\n            <div style={{ marginRight: \"0.2rem\" }}>\r\n              <ReactMarkdown>{String(\"*\" + props.tags + \"*\")}</ReactMarkdown>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignContent: \"flex-end\",\r\n            justifyContent: \"flex-end\"\r\n          }}\r\n        >\r\n          {props.weight && (\r\n            <ReactMarkdown>{String(props.weight + \"🎒, \")}</ReactMarkdown>\r\n          )}\r\n\r\n          {props.price && (\r\n            <ReactMarkdown>{String(props.price + \"💰\")}</ReactMarkdown>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Score = () => {\r\n    if (!props.score) return \"\";\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          cursor: \"pointer\",\r\n          fontSize: \"0.9rem\",\r\n          color: \"rgb(10, 10, 10)\",\r\n          margin: \"0 0.2rem\"\r\n        }}\r\n      >\r\n        <div style={{ margin: \"0 0.2rem\" }}>\r\n          <b>{props.score}</b>\r\n        </div>\r\n        <div style={{ width: \"2rem\" }}>\r\n          {statScoreToModScore(props.score) &&\r\n            `(${statScoreToModScore(props.score)})`}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={showAll ? \"selected\" : \"unselected\"}>\r\n      <div style={{ display: \"flex\" }}>\r\n        <ItemSelectButton />\r\n        <div className=\"group-item-label clickable\" onClick={toggleShowAll}>\r\n          <div style={{ display: \"flex\" }}>\r\n            <div>\r\n              <b>{props.label}</b>\r\n            </div>\r\n          </div>\r\n          <Subtitle />\r\n        </div>\r\n        <Score onClick={toggleShowAll} style={{}} />\r\n\r\n        {props.rollWith && (\r\n          <SC.ToggleLight\r\n            onClick={() => alert(\"Dice rolling not yet available.\")}\r\n          >\r\n            🎲\r\n          </SC.ToggleLight>\r\n        )}\r\n        {showAll && url && props.groupName !== \"abilities\" && (\r\n          <SC.ToggleLight toggle={true}>\r\n            <a\r\n              href={url}\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <span role=\"image\">🔗</span>\r\n            </a>\r\n          </SC.ToggleLight>\r\n        )}\r\n      </div>\r\n      {showAll && props.description && (\r\n        <div\r\n          className=\"clickable\"\r\n          onClick={toggleShowAll}\r\n          style={{\r\n            marginLeft: \"0.1rem\",\r\n            fontSize: \"0.9rem\"\r\n          }}\r\n        >\r\n          <ReactMarkdown>{String(props.description)}</ReactMarkdown>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupListItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as server from \"../server\";\r\nimport GroupListItem from \"./GroupListItem\";\r\nimport * as SC from \"../styled\";\r\nimport * as utils from \"../utils\";\r\n\r\nconst isOdd = (n) => (n & 1) === 1;\r\n\r\nconst getCharHasList = (groupList, groupData) => {\r\n  let charHasList = [];\r\n  groupList.map((groupItemName) =>\r\n    groupData.map((groupItem) => {\r\n      if (groupItem.name === groupItemName) {\r\n        charHasList = [...charHasList, groupItem];\r\n      }\r\n    })\r\n  );\r\n  return charHasList;\r\n};\r\n\r\nconst GroupList = (props) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [errs, setErrs] = useState([]);\r\n\r\n  const [groupList, setGroupList] = useState(props.char[props.groupName]);\r\n  const [groupData, setGroupData] = useState(null);\r\n  const [groupTracker, setGroupTracker] = useState(null);\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [isAddingNewGroupItem, setIsAddingNewGroupItem] = useState(false);\r\n\r\n  const handleGroupTracker = () => {\r\n    switch (props.groupName) {\r\n      case \"gear\":\r\n        let maxLoad =\r\n          10 +\r\n          utils.getJSONFieldByName(props.char.abilities, \"Strength\", \"score\");\r\n        let currentLoad = getCharHasList(groupList, groupData)\r\n          .map((gear) => gear.weight || 0)\r\n          .reduce((a, b) => a + b, 0);\r\n        setGroupTracker(`${currentLoad}/${maxLoad}🎒`);\r\n        if (currentLoad > maxLoad) {\r\n          handleErrs(\"OVER_MAX\", \"ADD\");\r\n        }\r\n        break;\r\n      case \"spells\":\r\n        let maxSpellLevels = 1 + props.char.level;\r\n        let currentSpellLevels = getCharHasList(groupList, groupData)\r\n          .map((spell) => spell.level || 0)\r\n          .reduce((a, b) => a + b, 0);\r\n        setGroupTracker(`${currentSpellLevels}/${maxSpellLevels}✨`);\r\n        if (currentSpellLevels > maxSpellLevels) {\r\n          handleErrs(\"OVER_MAX\", \"ADD\");\r\n        } else {\r\n          handleErrs(\"OVER_MAX\", \"REMOVE\");\r\n        }\r\n        break;\r\n      case \"moves\":\r\n        setGroupTracker(getCharHasList(groupList, groupData).length);\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const toggleEditMode = (e) => {\r\n    setEditMode(!editMode);\r\n  };\r\n\r\n  const handleErrs = (err, action) => {\r\n    let newErrs = errs;\r\n    if (action === \"ADD\" && !errs.includes(err)) {\r\n      newErrs = [...newErrs, err];\r\n    }\r\n\r\n    if (action === \"REMOVE\" && errs.includes(err)) {\r\n      newErrs = newErrs.filter((e) => e !== err);\r\n    }\r\n    setErrs(newErrs);\r\n  };\r\n\r\n  const handleUpdateGroupList = (action) => {\r\n    let newGroupList;\r\n    if (groupList.includes(action.newValue)) {\r\n      newGroupList = groupList.filter((e) => e !== action.newValue);\r\n    } else {\r\n      newGroupList = [...groupList, action.newValue];\r\n    }\r\n    setGroupList(newGroupList);\r\n  };\r\n\r\n  const handleSaveChanges = () => {\r\n    if (errs[0]) {\r\n      setGroupList(props.char[props.groupName]);\r\n      return;\r\n    }\r\n    let newCharState = { ...props.char, [props.groupName]: groupList };\r\n    props.setChar(newCharState);\r\n    server.saveCharacterData(newCharState);\r\n    // server.writeStreamTest(newCharState);\r\n    toggleEditMode();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoading && !groupData) {\r\n      const getAllChars = async () => {\r\n        let newGroupData = await server.getGroupData(props.groupName);\r\n        setGroupData(newGroupData.data);\r\n        setIsLoading(false);\r\n      };\r\n      getAllChars();\r\n    }\r\n\r\n    if (!isLoading) handleGroupTracker();\r\n    console.log(errs);\r\n  }, [editMode, props.char.level, isLoading, groupList, errs]);\r\n\r\n  return (\r\n    <div style={{}}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          marginRight: \"0.2rem\"\r\n        }}\r\n      >\r\n        <div className=\"group-item-label\" style={{ textAlign: \"center\" }}>\r\n          <b style={{ borderBottom: \"1px solid gray\", padding: \"0 2rem\" }}>\r\n            {String(props.groupName).toUpperCase()}\r\n          </b>\r\n        </div>\r\n        <div\r\n          style={{\r\n            padding: \"0.4rem 0.2rem\",\r\n            color: `${errs.includes(\"OVER_MAX\") ? \"red\" : \"black\"}`\r\n          }}\r\n        >\r\n          {groupTracker && groupTracker}\r\n        </div>\r\n        <SC.ToggleLight toggle={!editMode} onClick={() => toggleEditMode()}>\r\n          <span role=\"image\">{editMode ? \"❌\" : \"⚙️\"}</span>\r\n        </SC.ToggleLight>\r\n        {editMode && (\r\n          <SC.ToggleLight\r\n            toggle={errs.length === 0}\r\n            onClick={(e) => handleSaveChanges()}\r\n          >\r\n            <span role=\"image\">{errs[0] ? \"⛔\" : \"💾\"}</span>\r\n          </SC.ToggleLight>\r\n        )}\r\n      </div>\r\n      {!isLoading && (\r\n        <div className=\"fwmp\">\r\n          {!isAddingNewGroupItem &&\r\n            Object.values(groupData).map(\r\n              (groupItem) =>\r\n                (groupList.includes(groupItem.name) ||\r\n                  editMode ||\r\n                  props.groupName === \"abilities\") && (\r\n                  <div\r\n                    id={`group-list-item-container-${groupItem.name}`}\r\n                    key={`group-list-item-container-${groupItem.name}`}\r\n                    className=\"group-list-item-container\"\r\n                  >\r\n                    <GroupListItem\r\n                      groupName={props.groupName}\r\n                      label={groupItem.name}\r\n                      subtitle={groupItem.level || \"\"}\r\n                      level={groupItem.level}\r\n                      price={groupItem.price}\r\n                      description={groupItem.description}\r\n                      source={groupItem.source || \"\"}\r\n                      webURL={groupItem.webURL || \"\"}\r\n                      playbooks={groupItem.playbooks || \"\"}\r\n                      rollWith={groupItem.rollWith || \"\"}\r\n                      editMode={editMode}\r\n                      handleUpdateGroupList={handleUpdateGroupList}\r\n                      hasItem={groupList.includes(groupItem.name)}\r\n                      type={groupItem.type || \"\"}\r\n                      tags={groupItem.tags || \"\"}\r\n                      weight={groupItem.weight || \"\"}\r\n                      score={groupItem.score || \"\"}\r\n                    />\r\n                  </div>\r\n                )\r\n            )}\r\n        </div>\r\n      )}\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupList;\r\n","export const getJSONFieldByName = (obj, name, field) => {\r\n  let res;\r\n  obj.map((entry) => {\r\n    if (entry.name === name) {\r\n      res = entry[field];\r\n    }\r\n  });\r\n  return res;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport GroupList from \"../components/GroupList\";\r\nimport GroupListItem from \"../components/GroupListItem\";\r\n\r\nconst getJSONFieldByName = (obj, name, field) => {\r\n  let res;\r\n  obj.map((entry) => {\r\n    if (entry.name === name) {\r\n      res = entry[field];\r\n    }\r\n  });\r\n  return res;\r\n};\r\n\r\nconst xpNeeded = (level) => level * 7 + level;\r\n\r\nconst CharacterSheet = (props) => {\r\n  const [displayMode, setDisplayMode] = useState(\"compact\");\r\n  const char = props.char;\r\n\r\n  // const setChar = props.setChar;\r\n  // const toggleDisplayMode = () =>\r\n  //   setDisplayMode(displayMode === \"compact\" ? \"normal\" : \"compact\");\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <button\r\n        onClick={(e) => toggleDisplayMode()}\r\n        style={{\r\n          padding: \"0.4rem\",\r\n          position: \"absolute\",\r\n          top: 10,\r\n          right: 10,\r\n          opacity: \"75%\"\r\n        }}\r\n      >\r\n        {displayMode === \"compact\" ? \"compact\" : \"normal\"}\r\n      </button> */}\r\n      <div className={displayMode}>\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem subtitle=\"Name\" label={char.name} oneLine={true} />\r\n        </div>\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem subtitle=\"Race\" label={char.race} oneLine={true} />\r\n        </div>\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            subtitle=\"Playbook\"\r\n            label={char.playbook}\r\n            source={`${char.playbook}`}\r\n            webURL={char.webURL}\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            subtitle=\"Alignment\"\r\n            label={char.alignment.name}\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem subtitle=\"Level\" label={char.level} oneLine={true} />\r\n        </div>\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            subtitle=\"XP\"\r\n            label={`${char.xp} / ${xpNeeded(char.level + 1)}`}\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            subtitle=\"HP\"\r\n            label={\r\n              char.basehp +\r\n              getJSONFieldByName(props.char.abilities, \"Constitution\", \"score\")\r\n            }\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <GroupList\r\n        groupName=\"abilities\"\r\n        char={props.char}\r\n        setChar={props.setChar}\r\n      />\r\n\r\n      <div style={{ padding: 0, margin: 0 }}>\r\n        <div className=\"group-item-label\" style={{ textAlign: \"center\" }}>\r\n          <b style={{ borderBottom: \"1px solid gray\", padding: \"0 2rem\" }}>\r\n            BONDS\r\n          </b>\r\n        </div>\r\n\r\n        <div className=\"fwmp\">\r\n          {char.bonds.map((bond) => (\r\n            <div key={bond.description} className=\"single-item-container\">\r\n              <GroupListItem\r\n                subtitle={bond.description}\r\n                label=\"\"\r\n                oneLine={true}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <br />\r\n\r\n      <GroupList groupName=\"moves\" char={props.char} setChar={props.setChar} />\r\n\r\n      <GroupList groupName=\"spells\" char={props.char} setChar={props.setChar} />\r\n\r\n      <GroupList groupName=\"gear\" char={props.char} setChar={props.setChar} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterSheet;\r\n","import React, { useState, useEffect } from \"react\";\nimport CharacterSheet from \"./views/CharacterSheet\";\n\nimport * as server from \"./server\";\n\nimport \"./styles.css\";\n\nexport default function App() {\n  const isSiteUpdating = false;\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [allChars, setAllChars] = useState(null);\n  const [charName, setCharName] = useState(\"Levi\");\n  const [char, setChar] = useState(null);\n\n  useEffect(() => {\n    if (isLoading && !allChars) {\n      const getAllChars = async () => {\n        let allChars = await server.getCharacterData();\n        setAllChars(allChars);\n        setIsLoading(false);\n      };\n      getAllChars();\n    }\n    if (charName && allChars) {\n      for (let ch of allChars) {\n        if (ch.name === charName) {\n          console.log(\"ch match: \");\n          console.log(ch);\n          setChar(ch);\n        }\n      }\n    }\n  }, [charName, allChars]);\n\n  return (\n    <div>\n      {isSiteUpdating && <Alert />}\n\n      {char && !isLoading ? (\n        <CharacterSheet char={char} setChar={setChar} />\n      ) : (\n        <div>loading...</div>\n      )}\n    </div>\n  );\n}\n\nconst Alert = () => (\n  <div\n    style={{\n      backgroundColor: \"rgb(13, 30, 26)\",\n      color: \"darkorange\",\n      borderBottom: \"6px double orange\",\n      padding: \"1rem\"\n    }}\n  >\n    <span>{`ALERT: I'm logged in and am developing this site `}</span>\n    <span style={{ borderBottom: \"3px double gray\" }}>{`right now`}</span>.\n    <span>{` Things may be broken. If so, refresh or try again later.`}</span>\n  </div>\n);\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}