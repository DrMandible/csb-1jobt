{"version":3,"sources":["server.js","components/List.js","styled.js","components/GroupListItem.js","components/GroupList.js","utils.js","views/CharacterSheet.js","views/UserSelect.js","App.js","index.js"],"names":["URL_BASE","userId","getAllUsers","a","axios","get","catch","error","response","console","log","data","status","headers","request","message","res","saveCharacterData","char","id","charInfo","post","name","JSON","parse","characters","getGroupData","group","submitNewUser","userName","reducer","state","action","type","i","field","newValue","newState","List","props","useReducer","list","dispatch","listName","handleUpdate","handleSave","useEffect","String","toUpperCase","className","length","map","item","style","display","onClick","e","score","ToggleLight","styled","div","toggle","statScoreToModScore","statScore","IncrementButton","hasItem","handleUpdateScore","groupName","target","labelValue","Score","cursor","fontSize","color","margin","width","GroupListItem","useState","showAll","setShowAll","editMode","setEditMode","toggleShowAll","document","getElementById","maxHeight","stylestyle","oneLine","toggleEditMode","url","source","playbooks","replaceAll","ItemSelectButton","handleUpdateGroupList","role","Subtitle","alignContent","justifyContent","padding","subtitle","flexGrow","marginRight","tags","weight","price","labbelValue","rollWith","alert","href","rel","textDecoration","description","marginLeft","getCharHasList","groupList","groupData","charHasList","groupItemName","groupItem","GroupList","isLoading","setIsLoading","errs","setErrs","setGroupList","setGroupData","groupTracker","setGroupTracker","isAddingNewGroupItem","handleErrs","err","newErrs","includes","filter","newGroupData","Object","entries","newGroupList","server","abilities","getAllChars","maxLoad","obj","entry","utils","currentLoad","gear","reduce","b","maxSpellLevels","level","currentSpellLevels","spell","handleGroupTracker","textAlign","borderBottom","newCharState","setChar","handleSaveChanges","values","webURL","getJSONFieldByName","CharacterSheet","displayMode","race","playbook","alignment","xp","basehp","bonds","bond","UserSelect","isNewUser","setIsNewUser","setIsSubmitting","newUserName","setNewUserName","allUsers","setAllUsers","handleUserChange","user","character","Math","random","minWidth","onChange","value","placeholder","App","currentUser","setCurrentUser","charName","users","getUsers","newChar","newUserId","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.32e55bd5.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst URL_BASE = `https://home-bayes.glitch.me/api/dw`;\r\n\r\nlet userId = 99;\r\n\r\nexport const setUserId = (newUserId) => (userId = newUserId);\r\n\r\nexport const getAllUserNames = async () => await axios.get(`${URL_BASE}/users`);\r\n\r\nexport const getAllUsers = async () => {\r\n  let res = await axios.get(`${URL_BASE}/chars`).catch(function (error) {\r\n    if (error.response) {\r\n      console.log(\"Request made and server responded\");\r\n      console.log(error.response.data);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n    } else if (error.request) {\r\n      console.log(\"The request was made but no response was received\");\r\n      console.log(error.request);\r\n    } else {\r\n      console.log(\r\n        \"Something happened in setting up the request that triggered an Error\"\r\n      );\r\n      console.log(\"Error\", error.message);\r\n    }\r\n  });\r\n  // console.log(res.data);\r\n  // let newRes = res.data.map((user) => JSON.parse(user.characters));\r\n  // console.log(newRes);\r\n  return res.data;\r\n};\r\n\r\nexport const saveCharacterData = async (char) => {\r\n  console.log(\"saveCharacterData: \", { id: userId, charInfo: [char] });\r\n  const res = await axios.post(\r\n    `${URL_BASE}/chars/${char.name}`,\r\n    { id: userId, charInfo: [char] },\r\n    {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }\r\n  );\r\n  console.log(\"res.characters\", JSON.parse(res.characters));\r\n  return res.characters;\r\n};\r\n\r\nexport const getGroupData = async (group) => {\r\n  // console.log(\"*****\");\r\n  // console.log(`${URL_BASE}/groups/${group}`);\r\n  const res = await axios.get(`${URL_BASE}/groups/${group}`);\r\n  // console.log(res);\r\n  // console.log(\"*****\");\r\n  return res;\r\n};\r\n\r\nexport const saveGroupData = async (groupData) => {\r\n  console.log(\"saving group: \", groupData.name, groupData);\r\n  // const res = await axios.post(`${URL_BASE}/groups/${group.name}`, group, {\r\n  //   headers: {\r\n  //     \"Content-Type\": \"application/json\"\r\n  //   }\r\n  // });\r\n  // return res;\r\n};\r\n\r\nexport const submitNewUser = async (userName) => {\r\n  console.log(\"submitting: \", `${URL_BASE}/newUser/${userName}`);\r\n  const res = await axios.post(`${URL_BASE}/newUser/${userName}`, \"\", {\r\n    headers: {\r\n      \"Content-Type\": \"text/plain\"\r\n    }\r\n  });\r\n  console.log(res);\r\n  return res;\r\n};\r\n","import React, { useState, useEffect, useReducer } from \"react\";\r\nimport * as server from \"../server\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE\":\r\n      console.log(action.i, action.field, action.newValue);\r\n      let newState = [...state];\r\n      newState[action.i][action.field] = action.newValue;\r\n      console.log(newState);\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst List = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, props.list);\r\n\r\n  console.log(props.listName);\r\n  console.log(state);\r\n\r\n  const handleUpdate = (i, field, newValue) => {\r\n    dispatch({\r\n      type: \"UPDATE\",\r\n      i: i,\r\n      field: field,\r\n      newValue: newValue\r\n    });\r\n    props.handleSave(props.listName, state);\r\n  };\r\n\r\n  useEffect(() => {}, [state]);\r\n\r\n  return (\r\n    <div>\r\n      <div>{String(props.listName).toUpperCase()}</div>\r\n      <div className=\"fwmp\">\r\n        {state.length > 0 &&\r\n          state.map((item, i) => (\r\n            <div key={item.name} className={`group-item c`}>\r\n              <b>{item.name}</b>\r\n              <div\r\n                className={`c`}\r\n                style={{\r\n                  display: \"flex\"\r\n                }}\r\n              >\r\n                <div\r\n                  className={`group-item`}\r\n                  onClick={(e) => handleUpdate(i, \"score\", item.score - 1)}\r\n                >\r\n                  -\r\n                </div>\r\n                <div>{item.score}</div>\r\n                <div\r\n                  className={`group-item`}\r\n                  onClick={(e) => handleUpdate(i, \"score\", item.score + 1)}\r\n                >\r\n                  +\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ToggleLight = styled.div`\r\n  cursor: pointer;\r\n  padding: 0.3rem;\r\n  margin-right: 0.1rem;\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  text-align: center;\r\n  text-justify: center;\r\n  justify-content: center;\r\n  align-content: center;\r\n  background-color: ${(props) =>\r\n    props.toggle ? `rgb(220, 230, 220)` : `rgb(230, 220, 220)`};\r\n\r\n  :hover {\r\n    border-bottom: 1px solid black;\r\n    border-right: 1px solid black;\r\n  }\r\n`;\r\n\r\nexport const ToggleTag = styled(ToggleLight)`\r\n  width: auto;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as SC from \"../styled\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nconst statScoreToModScore = (statScore) => {\r\n  if (!statScore) return \"\";\r\n  if (statScore < 4) return \"-3\";\r\n  if (statScore < 6) return \"-2\";\r\n  if (statScore < 9) return \"-1\";\r\n  if (statScore < 13) return \"0\";\r\n  if (statScore < 16) return \"+1\";\r\n  if (statScore < 18) return \"+2\";\r\n  return \"+3\";\r\n};\r\n\r\nconst IncrementButton = (props) => {\r\n  return (\r\n    <div>\r\n      <SC.ToggleLight\r\n        toggle={props.hasItem}\r\n        onClick={(e) =>\r\n          props.handleUpdateScore({\r\n            group: props.groupName,\r\n            newValue: props.score + 1,\r\n            message: \"UPDATE\",\r\n            target: props.labelValue\r\n          })\r\n        }\r\n      >\r\n        <span>+</span>\r\n      </SC.ToggleLight>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Score = (props) => {\r\n  useEffect(() => {\r\n    console.log(\"props.score\", props.score);\r\n  }, [props.score]);\r\n  if (!props.score) return \"\";\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        cursor: \"pointer\",\r\n        fontSize: \"0.9rem\",\r\n        color: \"rgb(10, 10, 10)\",\r\n        margin: \"0 0.2rem\"\r\n      }}\r\n    >\r\n      <div style={{ margin: \"0 0.2rem\" }}>\r\n        <b>{props.score}</b>\r\n      </div>\r\n      <IncrementButton\r\n        groupName={props.groupName}\r\n        labelValue={props.labelValue}\r\n        score={props.score}\r\n        handleUpdateScore={props.handleUpdateScore}\r\n      />\r\n      <div style={{ width: \"2rem\" }}>\r\n        {statScoreToModScore(props.score) &&\r\n          `(${statScoreToModScore(props.score)})`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GroupListItem = (props) => {\r\n  const [showAll, setShowAll] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  if (props.groupName === \"abilities\") {\r\n    // console.log(`props.groupName === \"abilities\"`, props);\r\n  }\r\n\r\n  const toggleEditMode = (mode = null) => {\r\n    setEditMode(mode || !editMode);\r\n  };\r\n\r\n  const handleUserInput = (field, newValue) => {\r\n    console.log(field, newValue);\r\n  };\r\n\r\n  const toggleShowAll = () => {\r\n    // if (props.oneLine) {\r\n    //   console.log(\"edit: \", props.field);\r\n    //   toggleEditMode();\r\n    // }\r\n    if (\r\n      document.getElementById(`group-list-item-container-${props.labelValue}`)\r\n    ) {\r\n      if (!showAll) {\r\n        document.getElementById(\r\n          `group-list-item-container-${props.labelValue}`\r\n        ).stylestyle = { width: \"100%\", maxHeight: \"auto\" };\r\n      } else {\r\n        document.getElementById(\r\n          `group-list-item-container-${props.labelValue}`\r\n        ).style = { width: \"46%\", maxHeight: \"3rem\" };\r\n      }\r\n    }\r\n    if (!props.oneLine) setShowAll(!showAll);\r\n    toggleEditMode();\r\n  };\r\n\r\n  let url = null;\r\n  const getUrl = () => {\r\n    if (props.source === \"Custom\") return null;\r\n    if (props.source === \"Core\") {\r\n      url = `https://www.dungeonworldsrd.com/`;\r\n    }\r\n\r\n    if (props.playbooks && props.playbooks[0]) {\r\n      url += `classes/${props.playbooks[0]}/#${String(\r\n        props.labelValue\r\n      ).replaceAll(\" \", \"_\")}`;\r\n    } else {\r\n      if (props.type === \"Weapon\") {\r\n        url += `Equipment/#Weapon_List`;\r\n      } else {\r\n        url += `Equipment/#${String(props.type).replaceAll(\" \", \"_\")}`;\r\n      }\r\n    }\r\n    return url;\r\n  };\r\n  url = getUrl();\r\n\r\n  const ItemSelectButton = (props) => {\r\n    if (props.groupName === \"abilities\") return <div />;\r\n    return (\r\n      <div>\r\n        {props.editMode ? (\r\n          <SC.ToggleLight\r\n            toggle={props.hasItem}\r\n            onClick={(e) =>\r\n              props.handleUpdateGroupList({\r\n                group: props.groupName,\r\n                newValue: props.labelValue,\r\n                message: props.hasItem ? \"REMOVE\" : \"ADD\"\r\n              })\r\n            }\r\n          >\r\n            <span role=\"image\">{props.hasItem ? \"✔️\" : \"❌\"}</span>\r\n          </SC.ToggleLight>\r\n        ) : (\r\n          <div />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Subtitle = () => {\r\n    if (props.oneLine)\r\n      return (\r\n        <div\r\n          className=\"clickable\"\r\n          onClick={toggleShowAll}\r\n          style={{\r\n            alignContent: \"flex-end\",\r\n            justifyContent: \"flex-end\",\r\n            fontSize: \"0.8rem\",\r\n            color: \"rgb(10, 10, 10)\",\r\n            padding: \"0 0.2rem\"\r\n          }}\r\n        >\r\n          {props.subtitle && (\r\n            <ReactMarkdown>{String(props.subtitle)}</ReactMarkdown>\r\n          )}\r\n        </div>\r\n      );\r\n    return (\r\n      <div\r\n        className=\"clickable\"\r\n        onClick={toggleShowAll}\r\n        style={{\r\n          display: \"flex\",\r\n          fontSize: \"0.8rem\",\r\n          color: \"rgb(10, 10, 10)\",\r\n          padding: \"0 0.2rem\"\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", flexGrow: 1 }}>\r\n          {props.playbooks[0] && (\r\n            <div style={{ marginRight: \"0.2rem\" }}>\r\n              <ReactMarkdown>{String(props.playbooks)}</ReactMarkdown>\r\n            </div>\r\n          )}\r\n          {props.subtitle && (\r\n            <div style={{ marginRight: \"0.2rem\" }}>\r\n              <ReactMarkdown>{String(props.subtitle)}</ReactMarkdown>\r\n            </div>\r\n          )}\r\n          {props.tags[0] && (\r\n            <div style={{ marginRight: \"0.2rem\" }}>\r\n              <ReactMarkdown>{String(\"*\" + props.tags + \"*\")}</ReactMarkdown>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignContent: \"flex-end\",\r\n            justifyContent: \"flex-end\"\r\n          }}\r\n        >\r\n          {props.weight && (\r\n            <ReactMarkdown>{String(props.weight + \"🎒, \")}</ReactMarkdown>\r\n          )}\r\n\r\n          {props.price && (\r\n            <ReactMarkdown>{String(props.price + \"💰\")}</ReactMarkdown>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={showAll ? \"selected\" : \"unselected\"}>\r\n      {/* {editMode && (\r\n        <input onChange={(e) => handleUserInput(props.field, e.target.value)} />\r\n      )} */}\r\n      <div style={{ display: \"flex\" }}>\r\n        <ItemSelectButton />\r\n        <div\r\n          className=\"group-item-labelValue clickable\"\r\n          onClick={toggleShowAll}\r\n        >\r\n          <div style={{ display: \"flex\" }}>\r\n            <div>\r\n              <b>{props.labelValue}</b>\r\n            </div>\r\n          </div>\r\n          <Subtitle />\r\n        </div>\r\n        <Score\r\n          groupName={props.groupName}\r\n          labbelValue={props.labelValue}\r\n          handleUpdateScore={props.handleUpdateScore}\r\n          onClick={toggleShowAll}\r\n          style={{}}\r\n          score={props.score}\r\n        />\r\n\r\n        {props.rollWith && (\r\n          <SC.ToggleLight\r\n            onClick={() => alert(\"Dice rolling not yet available.\")}\r\n          >\r\n            🎲\r\n          </SC.ToggleLight>\r\n        )}\r\n        {showAll && url && props.groupName !== \"abilities\" && (\r\n          <SC.ToggleLight toggle={true}>\r\n            <a\r\n              href={url}\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <span role=\"image\">🔗</span>\r\n            </a>\r\n          </SC.ToggleLight>\r\n        )}\r\n      </div>\r\n      {showAll && props.description && (\r\n        <div\r\n          className=\"clickable\"\r\n          onClick={toggleShowAll}\r\n          style={{\r\n            marginLeft: \"0.1rem\",\r\n            fontSize: \"0.9rem\"\r\n          }}\r\n        >\r\n          <ReactMarkdown>{String(props.description)}</ReactMarkdown>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupListItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as server from \"../server\";\r\nimport GroupListItem from \"./GroupListItem\";\r\nimport * as SC from \"../styled\";\r\nimport * as utils from \"../utils\";\r\n\r\nconst isOdd = (n) => (n & 1) === 1;\r\n\r\nconst getCharHasList = (groupList, groupData) => {\r\n  let charHasList = [];\r\n  groupList.map((groupItemName) =>\r\n    groupData.map((groupItem) => {\r\n      if (groupItem.name === groupItemName) {\r\n        charHasList = [...charHasList, groupItem];\r\n      }\r\n    })\r\n  );\r\n  return charHasList;\r\n};\r\n\r\nconst GroupList = (props) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [errs, setErrs] = useState([]);\r\n\r\n  const [groupList, setGroupList] = useState(props.char[props.groupName]);\r\n  const [groupData, setGroupData] = useState(null);\r\n  const [groupTracker, setGroupTracker] = useState(null);\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [isAddingNewGroupItem, setIsAddingNewGroupItem] = useState(false);\r\n\r\n  const handleGroupTracker = () => {\r\n    switch (props.groupName) {\r\n      case \"gear\":\r\n        let maxLoad =\r\n          10 +\r\n          utils.getJSONFieldByName(props.char.abilities, \"Strength\", \"score\");\r\n        let currentLoad = getCharHasList(groupList, groupData)\r\n          .map((gear) => gear.weight || 0)\r\n          .reduce((a, b) => a + b, 0);\r\n        setGroupTracker(`${currentLoad}/${maxLoad}🎒`);\r\n        if (currentLoad > maxLoad) {\r\n          handleErrs(\"OVER_MAX\", \"ADD\");\r\n        }\r\n        break;\r\n      case \"spells\":\r\n        let maxSpellLevels = 1 + props.char.level;\r\n        let currentSpellLevels = getCharHasList(groupList, groupData)\r\n          .map((spell) => spell.level || 0)\r\n          .reduce((a, b) => a + b, 0);\r\n        setGroupTracker(`${currentSpellLevels}/${maxSpellLevels}✨`);\r\n        if (currentSpellLevels > maxSpellLevels) {\r\n          handleErrs(\"OVER_MAX\", \"ADD\");\r\n        } else {\r\n          handleErrs(\"OVER_MAX\", \"REMOVE\");\r\n        }\r\n        break;\r\n      case \"moves\":\r\n        setGroupTracker(getCharHasList(groupList, groupData).length);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const toggleEditMode = (e) => {\r\n    setEditMode(!editMode);\r\n  };\r\n\r\n  const handleErrs = (err, action) => {\r\n    let newErrs = errs;\r\n    if (action === \"ADD\" && !errs.includes(err)) {\r\n      newErrs = [...newErrs, err];\r\n    }\r\n\r\n    if (action === \"REMOVE\" && errs.includes(err)) {\r\n      newErrs = newErrs.filter((e) => e !== err);\r\n    }\r\n    setErrs(newErrs);\r\n  };\r\n\r\n  const handleUpdateScore = (action) => {\r\n    // console.log(action);\r\n    let newGroupData;\r\n    switch (action.message) {\r\n      case \"UPDATE\":\r\n        newGroupData = groupData;\r\n        for (let [i, g] of Object.entries(newGroupData)) {\r\n          if (g.name === action.target) {\r\n            newGroupData[i].score = action.newValue;\r\n          }\r\n        }\r\n        setGroupData(newGroupData);\r\n        break;\r\n      default:\r\n        console.error(\"action message not recognized: \", action.message);\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleUpdateGroupList = (action) => {\r\n    let newGroupList;\r\n    switch (action.message) {\r\n      case \"REMOVE\":\r\n        if (groupList.includes(action.newValue)) {\r\n          newGroupList = groupList.filter((e) => e !== action.newValue);\r\n        }\r\n        break;\r\n      case \"ADD\":\r\n        if (!groupList.includes(action.newValue)) {\r\n          newGroupList = [...groupList, action.newValue];\r\n        }\r\n        break;\r\n      default:\r\n        console.error(\"action message not recognized: \", action.message);\r\n        return;\r\n    }\r\n\r\n    // console.log(\"newGroupList\", newGroupList);\r\n    setGroupList(newGroupList);\r\n  };\r\n\r\n  const handleSaveChanges = () => {\r\n    if (errs[0]) {\r\n      setGroupList(props.char[props.groupName]);\r\n      return;\r\n    }\r\n    let newCharState = { ...props.char, [props.groupName]: groupList };\r\n    props.setChar(newCharState);\r\n    server.saveCharacterData(newCharState);\r\n    toggleEditMode();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoading && !groupData) {\r\n      const getAllChars = async () => {\r\n        // console.log(\"server.getGroupData(props.groupName)\");\r\n        let newGroupData = await server.getGroupData(props.groupName);\r\n        if (props.groupName === \"abilities\") {\r\n          newGroupData.data = props.char.abilities;\r\n        }\r\n        setGroupData(newGroupData.data);\r\n        setIsLoading(false);\r\n      };\r\n      getAllChars();\r\n    }\r\n\r\n    if (!isLoading) handleGroupTracker();\r\n  }, [editMode, props.char.level, isLoading, groupList, errs]);\r\n\r\n  return (\r\n    <div style={{}}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          marginRight: \"0.2rem\"\r\n        }}\r\n      >\r\n        <div className=\"group-item-label\" style={{ textAlign: \"center\" }}>\r\n          <b style={{ borderBottom: \"1px solid gray\", padding: \"0 2rem\" }}>\r\n            {String(props.groupName).toUpperCase()}\r\n          </b>\r\n        </div>\r\n        <div\r\n          style={{\r\n            padding: \"0.4rem 0.2rem\",\r\n            color: `${errs.includes(\"OVER_MAX\") ? \"red\" : \"black\"}`\r\n          }}\r\n        >\r\n          {groupTracker && groupTracker}\r\n        </div>\r\n        <SC.ToggleLight toggle={!editMode} onClick={() => toggleEditMode()}>\r\n          <span role=\"image\">{editMode ? \"❌\" : \"⚙️\"}</span>\r\n        </SC.ToggleLight>\r\n        {editMode && (\r\n          <SC.ToggleLight\r\n            toggle={errs.length === 0}\r\n            onClick={(e) => handleSaveChanges()}\r\n          >\r\n            <span role=\"image\">{errs[0] ? \"⛔\" : \"💾\"}</span>\r\n          </SC.ToggleLight>\r\n        )}\r\n      </div>\r\n      {!isLoading && (\r\n        <div className=\"fwmp\">\r\n          {!isAddingNewGroupItem &&\r\n            Object.values(groupData).map(\r\n              (groupItem) =>\r\n                (groupList.includes(groupItem.name) ||\r\n                  editMode ||\r\n                  props.groupName === \"abilities\") && (\r\n                  <div\r\n                    id={`group-list-item-container-${groupItem.name}`}\r\n                    key={`group-list-item-container-${groupItem.name}`}\r\n                    className=\"group-list-item-container\"\r\n                  >\r\n                    <GroupListItem\r\n                      groupName={props.groupName}\r\n                      labelValue={groupItem.name}\r\n                      subtitle={groupItem.level || \"\"}\r\n                      level={groupItem.level}\r\n                      price={groupItem.price}\r\n                      description={groupItem.description}\r\n                      source={groupItem.source || \"\"}\r\n                      webURL={groupItem.webURL || \"\"}\r\n                      playbooks={groupItem.playbooks || \"\"}\r\n                      rollWith={groupItem.rollWith || \"\"}\r\n                      editMode={editMode}\r\n                      handleUpdateGroupList={handleUpdateGroupList}\r\n                      handleUpdateScore={handleUpdateScore}\r\n                      hasItem={groupList.includes(groupItem.name)}\r\n                      type={groupItem.type || \"\"}\r\n                      tags={groupItem.tags || \"\"}\r\n                      weight={groupItem.weight || \"\"}\r\n                      score={groupItem.score || \"\"}\r\n                    />\r\n                  </div>\r\n                )\r\n            )}\r\n        </div>\r\n      )}\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupList;\r\n","export const getJSONFieldByName = (obj, name, field) => {\r\n  let res;\r\n  obj.map((entry) => {\r\n    if (entry.name === name) {\r\n      res = entry[field];\r\n    }\r\n  });\r\n  return res;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as server from \"../server\";\r\n\r\nimport List from \"../components/List\";\r\nimport GroupList from \"../components/GroupList\";\r\nimport GroupListItem from \"../components/GroupListItem\";\r\n\r\nconst getJSONFieldByName = (obj, name, field) => {\r\n  let res;\r\n  obj.map((entry) => {\r\n    if (entry.name === name) {\r\n      res = entry[field];\r\n    }\r\n  });\r\n  return res;\r\n};\r\n\r\nconst xpNeeded = (level) => level * 7 + level;\r\n\r\nconst CharacterSheet = (props) => {\r\n  const [displayMode, setDisplayMode] = useState(\"compact\");\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={displayMode}>\r\n        {/* <Formik initialValues={char} onSubmit={() => {}}>\r\n          {() => (\r\n            <Form>\r\n              <div className=\"single-item-container\">\r\n                <Field\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  field=\"name\"\r\n                  subtitle=\"Name\"\r\n                  oneLine={true}\r\n                  labelValue={char.name}\r\n                  component={GroupListItem}\r\n                />\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik> */}\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            field=\"name\"\r\n            subtitle=\"Name\"\r\n            labelValue={props.char.name}\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            field=\"race\"\r\n            subtitle=\"Race\"\r\n            labelValue={props.char.race}\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            field=\"playbook\"\r\n            subtitle=\"Playbook\"\r\n            labelValue={props.char.playbook}\r\n            source={`${props.char.playbook}`}\r\n            webURL={props.char.webURL}\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            field=\"alignment\"\r\n            subtitle=\"Alignment\"\r\n            labelValue={props.char.alignment.name}\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            field=\"level\"\r\n            subtitle=\"Level\"\r\n            labelValue={props.char.level}\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            field=\"xp\"\r\n            subtitle=\"XP\"\r\n            labelValue={`${props.char.xp} / ${xpNeeded(props.char.level + 1)}`}\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            field=\"hp\"\r\n            subtitle=\"HP\"\r\n            labelValue={\r\n              props.char.basehp +\r\n              getJSONFieldByName(props.char.abilities, \"Constitution\", \"score\")\r\n            }\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <List\r\n        list={props.char.abilities}\r\n        handleSave={props.handleSave}\r\n        listName=\"abilities\"\r\n      />\r\n      {/* <GroupList\r\n        groupName=\"abilities\"\r\n        char={props.char}\r\n        setChar={props.setChar}\r\n      /> */}\r\n\r\n      <div style={{ padding: 0, margin: 0 }}>\r\n        <div className=\"group-item-labelValue\" style={{ textAlign: \"center\" }}>\r\n          <b style={{ borderBottom: \"1px solid gray\", padding: \"0 2rem\" }}>\r\n            BONDS\r\n          </b>\r\n        </div>\r\n\r\n        <div className=\"fwmp\">\r\n          {props.char.bonds.map((bond) => (\r\n            <div key={bond.description} className=\"single-item-container\">\r\n              <GroupListItem\r\n                subtitle={bond.description}\r\n                field=\"bonds\"\r\n                oneLine={true}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <br />\r\n\r\n      <GroupList groupName=\"moves\" char={props.char} setChar={props.setChar} />\r\n\r\n      <GroupList groupName=\"spells\" char={props.char} setChar={props.setChar} />\r\n\r\n      <GroupList groupName=\"gear\" char={props.char} setChar={props.setChar} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterSheet;\r\n","import React, { useState } from \"react\";\r\nimport * as server from \"../server\";\r\n\r\nconst UserSelect = (props) => {\r\n  const [isNewUser, setIsNewUser] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [newUserName, setNewUserName] = useState(\"\");\r\n\r\n  const toggleIsNewUser = () => setIsNewUser(!isNewUser);\r\n\r\n  const handleUserInput = (userName) => setNewUserName(userName);\r\n\r\n  const submitNewUser = async () => {\r\n    setIsSubmitting(true);\r\n    let allUsers = await server.submitNewUser(newUserName);\r\n    if (allUsers) {\r\n      props.setAllUsers(allUsers);\r\n      props.handleUserChange(newUserName);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ padding: \"1rem\", borderBottom: \"1px solid gray\" }}>\r\n        Accounts\r\n      </h3>\r\n      <div className=\"fwmp\">\r\n        {props.allUsers && props.allUsers.map((user) => (\r\n          <div\r\n            onClick={(e) => props.handleUserChange(user.userName)}\r\n            className=\"single-item-container\"\r\n            key={Math.random()}\r\n          >\r\n            <b>{user.userName}</b>\r\n\r\n            <div>\r\n              {user.characters.map((character, i) => (\r\n                <div className=\"indented\" key={Math.random()}>\r\n                  {character.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        <div\r\n          onClick={toggleIsNewUser}\r\n          className={`single-item-container ${\r\n            isNewUser ? \"selected\" : \"unselected\"\r\n          }`}\r\n        >\r\n          New User\r\n        </div>\r\n      </div>\r\n      {isNewUser && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            minWidth: \"100vw\",\r\n            alignContent: \"center\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          <div className=\"single-item-container\">\r\n            <input\r\n              onChange={(e) => {\r\n                handleUserInput(e.target.value);\r\n              }}\r\n              style={{\r\n                margin: \"1rem 0\",\r\n                minWidth: \"99%\",\r\n                textAlign: \"center\"\r\n              }}\r\n              placeholder=\"User Name\"\r\n            />\r\n            <div\r\n              onClick={(e) => submitNewUser()}\r\n              className={`clickable ${isNewUser ? \"selected\" : \"unselected\"}`}\r\n              style={{\r\n                padding: \"1rem 0\",\r\n                minWidth: \"100%\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              CREATE\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSelect;\r\n","import React, { useState, useEffect } from \"react\";\nimport CharacterSheet from \"./views/CharacterSheet\";\nimport UserSelect from \"./views/UserSelect\";\n\nimport * as server from \"./server\";\n\nimport \"./styles.css\";\n\nexport default function App() {\n  const isSiteUpdating = false;\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [allUsers, setAllUsers] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [charName, setCharName] = useState(\"Levi\");\n  const [char, setChar] = useState(null);\n  const [userId, setUserId] = useState(null);\n\n  useEffect(() => {\n    if (isLoading && !allUsers) {\n      const getUsers = async () => {\n        let users = await server.getAllUsers();\n        console.log(\"setAllUsers: \", users);\n        setAllUsers(users);\n        setIsLoading(false);\n      };\n      getUsers();\n    }\n    // if (charName && allUsers) {\n    //   for (let [i, ch] of Object.entries(...allUsers)) {\n    //     if (ch.name === charName) {\n    //       console.log(\"setChar: \", ch);\n    //       setUserId(i);\n    //       setChar(ch);\n    //     }\n    //   }\n    // }\n  }, [charName, allUsers]);\n\n  const handleSave = async (field, newValue) => {\n    let newChar = char;\n    newChar[field] = newValue;\n    let data = await server.saveCharacterData(newChar);\n    console.log(data);\n    setChar(data);\n  };\n\n  const handleUserChange = (userName) => {\n    console.log(\"Searching for user: \", userName);\n    console.log(\"allUsers: \", allUsers);\n    for (let user of allUsers) {\n      console.log(\"user: \", user);\n      if (user.userName === userName) {\n        setCurrentUser(user);\n        console.log(\"setChar: \", user.characters[0]);\n        server.setUserId(user.id);\n        setChar(user.characters[0]);\n      }\n    }\n    // for (let user of allUsers) {\n    //   console.log(user);\n    //   if (user.userName === userName) {\n    //     console.log(\"matched! userName = \", user.userName);\n    //     setChar(user.characters[0]);\n    //     server.setUserId(user.id);\n    //   }\n    // }\n    // setUserId(newUserID)};\n  };\n  return (\n    <div>\n      {isSiteUpdating && <Alert />}\n\n      {currentUser && <div>User: {currentUser.userName}</div>}\n\n      {allUsers && !char && (\n        <UserSelect\n          allUsers={allUsers}\n          setAllUsers={setAllUsers}\n          handleUserChange={handleUserChange}\n        />\n      )}\n\n      {/* {userId && (\n        <div>\n          {allChars.map((chars) => {\n            return (\n              <div key={Math.random()}>\n                {chars.map((aChar) => {\n                  return (\n                    <div key={Math.random()} value={aChar.name}>\n                      {aChar.name}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      )} */}\n      {char && (\n        <CharacterSheet char={char} setChar={setChar} handleSave={handleSave} />\n      )}\n\n      {isLoading && <div>loading...</div>}\n    </div>\n  );\n}\n\nconst Alert = () => (\n  <div\n    style={{\n      backgroundColor: \"rgb(13, 30, 26)\",\n      color: \"darkorange\",\n      borderBottom: \"6px double orange\",\n      padding: \"1rem\"\n    }}\n  >\n    <span>{`ALERT: I'm logged in and am developing this site `}</span>\n    <span style={{ borderBottom: \"3px double gray\" }}>{`right now`}</span>.\n    <span>{` Things may be broken. If so, refresh or try again later.`}</span>\n  </div>\n);\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}