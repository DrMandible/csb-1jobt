{"version":3,"sources":["server.js","styled.js","components/List.js","utils.js","components/GroupListItem.js","components/GroupList.js","views/CharacterSheet.js","views/UserSelect.js","App.js","index.js"],"names":["URL_BASE","userId","getAllUsers","a","axios","get","catch","error","response","console","log","data","status","headers","request","message","res","saveCharacterData","char","id","charInfo","post","name","JSON","parse","characters","getGroupData","group","submitNewUser","userName","ToggleLight","styled","div","props","toggle","reducer","state","action","newState","type","i","field","newValue","newStateData","Move","item","rollWith","style","display","className","description","Score","isEditing","zIndex","onClick","e","handleUpdate","score","statScore","List","useReducer","list","dispatch","useState","setIsEditing","handleEdit","useEffect","listName","server","listData","getStateDetails","details","includes","indexOf","getListData","width","String","toUpperCase","handleSave","role","length","map","Math","random","statScoreToModScore","IncrementButton","hasItem","handleUpdateScore","groupName","target","labelValue","cursor","fontSize","color","margin","GroupListItem","showAll","setShowAll","editMode","setEditMode","toggleShowAll","document","getElementById","maxHeight","stylestyle","oneLine","toggleEditMode","url","source","playbooks","replaceAll","ItemSelectButton","handleUpdateGroupList","Subtitle","alignContent","justifyContent","padding","subtitle","flexGrow","marginRight","tags","weight","price","labbelValue","alert","href","rel","textDecoration","marginLeft","getCharHasList","groupList","groupData","charHasList","groupItemName","groupItem","GroupList","isLoading","setIsLoading","errs","setErrs","setGroupList","setGroupData","groupTracker","setGroupTracker","isAddingNewGroupItem","handleErrs","err","newErrs","filter","newGroupData","Object","entries","newGroupList","abilities","getAllChars","maxLoad","obj","entry","utils","currentLoad","gear","reduce","b","maxSpellLevels","level","currentSpellLevels","spell","handleGroupTracker","textAlign","borderBottom","newCharState","setChar","handleSaveChanges","values","webURL","getJSONFieldByName","CharacterSheet","displayMode","race","playbook","alignment","xp","basehp","bonds","bond","UserSelect","isNewUser","setIsNewUser","setIsSubmitting","newUserName","setNewUserName","allUsers","setAllUsers","handleUserChange","user","character","minWidth","onChange","value","placeholder","App","currentUser","setCurrentUser","charName","users","getUsers","newChar","newUserId","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.c363defc.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst URL_BASE = `https://home-bayes.glitch.me/api/dw`;\r\n\r\nlet userId = 99;\r\n\r\nexport const setUserId = (newUserId) => (userId = newUserId);\r\n\r\nexport const getAllUserNames = async () => await axios.get(`${URL_BASE}/users`);\r\n\r\nexport const getAllUsers = async () => {\r\n  let res = await axios.get(`${URL_BASE}/chars`).catch(function (error) {\r\n    if (error.response) {\r\n      console.log(\"Request made and server responded\");\r\n      console.log(error.response.data);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n    } else if (error.request) {\r\n      console.log(\"The request was made but no response was received\");\r\n      console.log(error.request);\r\n    } else {\r\n      console.log(\r\n        \"Something happened in setting up the request that triggered an Error\"\r\n      );\r\n      console.log(\"Error\", error.message);\r\n    }\r\n  });\r\n  // console.log(res.data);\r\n  // let newRes = res.data.map((user) => JSON.parse(user.characters));\r\n  // console.log(newRes);\r\n  return res.data;\r\n};\r\n\r\nexport const saveCharacterData = async (char) => {\r\n  console.log(\"saveCharacterData: \", { id: userId, charInfo: [char] });\r\n  const res = await axios.post(\r\n    `${URL_BASE}/chars/${char.name}`,\r\n    { id: userId, charInfo: [char] },\r\n    {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }\r\n  );\r\n  console.log(\"res.characters\", JSON.parse(res.characters));\r\n  return res.characters;\r\n};\r\n\r\nexport const getGroupData = async (group) => {\r\n  // console.log(\"*****\");\r\n  // console.log(`${URL_BASE}/groups/${group}`);\r\n  const res = await axios.get(`${URL_BASE}/groups/${group}`);\r\n  // console.log(res);\r\n  // console.log(\"*****\");\r\n  return res;\r\n};\r\n\r\nexport const saveGroupData = async (groupData) => {\r\n  console.log(\"saving group: \", groupData.name, groupData);\r\n  // const res = await axios.post(`${URL_BASE}/groups/${group.name}`, group, {\r\n  //   headers: {\r\n  //     \"Content-Type\": \"application/json\"\r\n  //   }\r\n  // });\r\n  // return res;\r\n};\r\n\r\nexport const submitNewUser = async (userName) => {\r\n  console.log(\"submitting: \", `${URL_BASE}/newUser/${userName}`);\r\n  const res = await axios.post(`${URL_BASE}/newUser/${userName}`, \"\", {\r\n    headers: {\r\n      \"Content-Type\": \"text/plain\"\r\n    }\r\n  });\r\n  console.log(res);\r\n  return res;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ToggleLight = styled.div`\r\n  cursor: pointer;\r\n  padding: 0.3rem;\r\n  margin-right: 0.1rem;\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  text-align: center;\r\n  text-justify: center;\r\n  justify-content: center;\r\n  align-content: center;\r\n  background-color: ${(props) =>\r\n    props.toggle ? `rgb(220, 230, 220)` : `rgb(230, 220, 220)`};\r\n\r\n  :hover {\r\n    border-bottom: 1px solid black;\r\n    border-right: 1px solid black;\r\n  }\r\n`;\r\n\r\nexport const ToggleTag = styled(ToggleLight)`\r\n  width: auto;\r\n`;\r\n","import React, { useState, useEffect, useReducer } from \"react\";\r\nimport * as SC from \"../styled\";\r\nimport * as utils from \"../utils\";\r\nimport * as server from \"../server\";\r\nimport { move } from \"formik\";\r\n\r\nconst reducer = (state, action) => {\r\n  let newState;\r\n  switch (action.type) {\r\n    case \"UPDATE\":\r\n      console.log(action.i, action.field, action.newValue);\r\n      newState = [...state];\r\n      newState[action.i][action.field] = action.newValue;\r\n      console.log(newState);\r\n      return newState;\r\n    case \"NEW_DATA\":\r\n      newState = [...state];\r\n      newState = action.newStateData;\r\n      console.log(\"NEW_DATA\", newState);\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Move = (props) => {\r\n  return (\r\n    <div>\r\n      {props.item.rollWith || \"\"}\r\n      <div style={{ display: \"flex\" }}>\r\n        <div className={`p m`}>{props.item.description || \"\"} </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Score = (props) => (\r\n  <div\r\n    className={`c`}\r\n    style={{\r\n      display: \"flex\"\r\n    }}\r\n  >\r\n    {props.isEditing && (\r\n      <div\r\n        style={{ zIndex: 9999 }}\r\n        className={`p m c bdr`}\r\n        onClick={(e) =>\r\n          props.handleUpdate(props.i, \"score\", props.item.score - 1)\r\n        }\r\n      >\r\n        -\r\n      </div>\r\n    )}\r\n    <div className=\"header\">\r\n      <div className={`pr`}>{props.item.score}</div>\r\n      <div className={`btn`}>{utils.statScoreToModScore(props.item.score)}</div>\r\n    </div>\r\n    {props.isEditing && (\r\n      <div\r\n        className={`p m c bdr`}\r\n        onClick={(e) =>\r\n          props.handleUpdate(props.i, \"score\", props.item.score + 1)\r\n        }\r\n      >\r\n        +\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst List = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, props.list);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const toggleEditMode = () => {\r\n    if (isEditing) {\r\n      props.handleSave(props.listName, state);\r\n    }\r\n    setIsEditing(!isEditing);\r\n  };\r\n\r\n  const handleEdit = (i, field, newValue) => {\r\n    dispatch({\r\n      type: \"UPDATE\",\r\n      i: i,\r\n      field: field,\r\n      newValue: newValue\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (state && props.listName === \"moves\") {\r\n      const getListData = async () => {\r\n        let res = await server.getGroupData(props.listName);\r\n        if (res.status === 200) {\r\n          let newState = [...state];\r\n          let listData = res.data;\r\n          let getStateDetails = () => {\r\n            for (let details of listData) {\r\n              if (state.includes(details.name)) {\r\n                console.log(state.indexOf(details.name));\r\n                newState[state.indexOf(details.name)] = details;\r\n              }\r\n            }\r\n            return newState;\r\n          };\r\n          let newStateData = await getStateDetails();\r\n          dispatch({\r\n            type: \"NEW_DATA\",\r\n            newStateData: newStateData\r\n          });\r\n          return newStateData;\r\n        }\r\n      };\r\n      // console.log(getListData());\r\n      getListData();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"c\"\r\n        style={{\r\n          display: \"flex\"\r\n        }}\r\n      >\r\n        <b style={{ width: \"100%\" }}>{String(props.listName).toUpperCase()}</b>\r\n        <SC.ToggleLight toggle={!isEditing} onClick={toggleEditMode}>\r\n          <span role=\"image\">{isEditing ? \"💾\" : \"⚙️\"}</span>\r\n        </SC.ToggleLight>\r\n      </div>\r\n      <div className=\"fwmp\">\r\n        {(state || []).length > 0 &&\r\n          state.map((item, i) => {\r\n            // console.log(item);\r\n            return (\r\n              <div key={`${item.name}_${Math.random()}`} className={`bdr c`}>\r\n                <div className=\"header\">\r\n                  <b>{item.name}</b>\r\n                  <div>{item.rollWith || \"\"}</div>\r\n\r\n                  {item.score && (\r\n                    <Score\r\n                      i={i}\r\n                      item={item}\r\n                      handleUpdate={handleEdit}\r\n                      isEditing={isEditing}\r\n                    />\r\n                  )}\r\n                </div>\r\n                {item.description && (\r\n                  <Move\r\n                    i={i}\r\n                    item={item}\r\n                    handleUpdate={handleEdit}\r\n                    isEditing={isEditing}\r\n                  />\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","export const getJSONFieldByName = (obj, name, field) => {\r\n  let res;\r\n  obj.map((entry) => {\r\n    if (entry.name === name) {\r\n      res = entry[field];\r\n    }\r\n  });\r\n  return res;\r\n};\r\n\r\nexport const statScoreToModScore = (statScore) => {\r\n  if (!statScore) return \"\";\r\n  if (statScore < 4) return \"-3\";\r\n  if (statScore < 6) return \"-2\";\r\n  if (statScore < 9) return \"-1\";\r\n  if (statScore < 13) return \"0\";\r\n  if (statScore < 16) return \"+1\";\r\n  if (statScore < 18) return \"+2\";\r\n  return \"+3\";\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as SC from \"../styled\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nconst statScoreToModScore = (statScore) => {\r\n  if (!statScore) return \"\";\r\n  if (statScore < 4) return \"-3\";\r\n  if (statScore < 6) return \"-2\";\r\n  if (statScore < 9) return \"-1\";\r\n  if (statScore < 13) return \"0\";\r\n  if (statScore < 16) return \"+1\";\r\n  if (statScore < 18) return \"+2\";\r\n  return \"+3\";\r\n};\r\n\r\nconst IncrementButton = (props) => {\r\n  return (\r\n    <div>\r\n      <SC.ToggleLight\r\n        toggle={props.hasItem}\r\n        onClick={(e) =>\r\n          props.handleUpdateScore({\r\n            group: props.groupName,\r\n            newValue: props.score + 1,\r\n            message: \"UPDATE\",\r\n            target: props.labelValue\r\n          })\r\n        }\r\n      >\r\n        <span>+</span>\r\n      </SC.ToggleLight>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Score = (props) => {\r\n  // useEffect(() => {\r\n  //   console.log(\"props.score\", props.score);\r\n  // }, [props.score]);\r\n  if (!props.score) return \"\";\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        cursor: \"pointer\",\r\n        fontSize: \"0.9rem\",\r\n        color: \"rgb(10, 10, 10)\",\r\n        margin: \"0 0.2rem\"\r\n      }}\r\n    >\r\n      <div style={{ margin: \"0 0.2rem\" }}>\r\n        <b>{props.score}</b>\r\n      </div>\r\n      <IncrementButton\r\n        groupName={props.groupName}\r\n        labelValue={props.labelValue}\r\n        score={props.score}\r\n        handleUpdateScore={props.handleUpdateScore}\r\n      />\r\n      <div style={{ width: \"2rem\" }}>\r\n        {statScoreToModScore(props.score) &&\r\n          `(${statScoreToModScore(props.score)})`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GroupListItem = (props) => {\r\n  const [showAll, setShowAll] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  if (props.groupName === \"abilities\") {\r\n    // console.log(`props.groupName === \"abilities\"`, props);\r\n  }\r\n\r\n  const toggleEditMode = (mode = null) => {\r\n    setEditMode(mode || !editMode);\r\n  };\r\n\r\n  const handleUserInput = (field, newValue) => {\r\n    console.log(field, newValue);\r\n  };\r\n\r\n  const toggleShowAll = () => {\r\n    // if (props.oneLine) {\r\n    //   console.log(\"edit: \", props.field);\r\n    //   toggleEditMode();\r\n    // }\r\n    if (\r\n      document.getElementById(`group-list-item-container-${props.labelValue}`)\r\n    ) {\r\n      if (!showAll) {\r\n        document.getElementById(\r\n          `group-list-item-container-${props.labelValue}`\r\n        ).stylestyle = { width: \"100%\", maxHeight: \"auto\" };\r\n      } else {\r\n        document.getElementById(\r\n          `group-list-item-container-${props.labelValue}`\r\n        ).style = { width: \"46%\", maxHeight: \"3rem\" };\r\n      }\r\n    }\r\n    if (!props.oneLine) setShowAll(!showAll);\r\n    toggleEditMode();\r\n  };\r\n\r\n  let url = null;\r\n  const getUrl = () => {\r\n    if (props.source === \"Custom\") return null;\r\n    if (props.source === \"Core\") {\r\n      url = `https://www.dungeonworldsrd.com/`;\r\n    }\r\n\r\n    if (props.playbooks && props.playbooks[0]) {\r\n      url += `classes/${props.playbooks[0]}/#${String(\r\n        props.labelValue\r\n      ).replaceAll(\" \", \"_\")}`;\r\n    } else {\r\n      if (props.type === \"Weapon\") {\r\n        url += `Equipment/#Weapon_List`;\r\n      } else {\r\n        url += `Equipment/#${String(props.type).replaceAll(\" \", \"_\")}`;\r\n      }\r\n    }\r\n    return url;\r\n  };\r\n  url = getUrl();\r\n\r\n  const ItemSelectButton = (props) => {\r\n    if (props.groupName === \"abilities\") return <div />;\r\n    return (\r\n      <div>\r\n        {props.editMode ? (\r\n          <SC.ToggleLight\r\n            toggle={props.hasItem}\r\n            onClick={(e) =>\r\n              props.handleUpdateGroupList({\r\n                group: props.groupName,\r\n                newValue: props.labelValue,\r\n                message: props.hasItem ? \"REMOVE\" : \"ADD\"\r\n              })\r\n            }\r\n          >\r\n            <span role=\"image\">{props.hasItem ? \"✔️\" : \"❌\"}</span>\r\n          </SC.ToggleLight>\r\n        ) : (\r\n          <div />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Subtitle = () => {\r\n    if (props.oneLine)\r\n      return (\r\n        <div\r\n          className=\"clickable\"\r\n          onClick={toggleShowAll}\r\n          style={{\r\n            alignContent: \"flex-end\",\r\n            justifyContent: \"flex-end\",\r\n            fontSize: \"0.8rem\",\r\n            color: \"rgb(10, 10, 10)\",\r\n            padding: \"0 0.2rem\"\r\n          }}\r\n        >\r\n          {props.subtitle && (\r\n            <ReactMarkdown>{String(props.subtitle)}</ReactMarkdown>\r\n          )}\r\n        </div>\r\n      );\r\n    return (\r\n      <div\r\n        className=\"clickable\"\r\n        onClick={toggleShowAll}\r\n        style={{\r\n          display: \"flex\",\r\n          fontSize: \"0.8rem\",\r\n          color: \"rgb(10, 10, 10)\",\r\n          padding: \"0 0.2rem\"\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", flexGrow: 1 }}>\r\n          {props.playbooks[0] && (\r\n            <div style={{ marginRight: \"0.2rem\" }}>\r\n              <ReactMarkdown>{String(props.playbooks)}</ReactMarkdown>\r\n            </div>\r\n          )}\r\n          {props.subtitle && (\r\n            <div style={{ marginRight: \"0.2rem\" }}>\r\n              <ReactMarkdown>{String(props.subtitle)}</ReactMarkdown>\r\n            </div>\r\n          )}\r\n          {props.tags[0] && (\r\n            <div style={{ marginRight: \"0.2rem\" }}>\r\n              <ReactMarkdown>{String(\"*\" + props.tags + \"*\")}</ReactMarkdown>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignContent: \"flex-end\",\r\n            justifyContent: \"flex-end\"\r\n          }}\r\n        >\r\n          {props.weight && (\r\n            <ReactMarkdown>{String(props.weight + \"🎒, \")}</ReactMarkdown>\r\n          )}\r\n\r\n          {props.price && (\r\n            <ReactMarkdown>{String(props.price + \"💰\")}</ReactMarkdown>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={showAll ? \"selected\" : \"unselected\"}>\r\n      {/* {editMode && (\r\n        <input onChange={(e) => handleUserInput(props.field, e.target.value)} />\r\n      )} */}\r\n      <div style={{ display: \"flex\" }}>\r\n        <ItemSelectButton />\r\n        <div\r\n          className=\"group-item-labelValue clickable\"\r\n          onClick={toggleShowAll}\r\n        >\r\n          <div style={{ display: \"flex\" }}>\r\n            <div>\r\n              <b>{props.labelValue}</b>\r\n            </div>\r\n          </div>\r\n          <Subtitle />\r\n        </div>\r\n        <Score\r\n          groupName={props.groupName}\r\n          labbelValue={props.labelValue}\r\n          handleUpdateScore={props.handleUpdateScore}\r\n          onClick={toggleShowAll}\r\n          style={{}}\r\n          score={props.score}\r\n        />\r\n\r\n        {props.rollWith && (\r\n          <SC.ToggleLight\r\n            onClick={() => alert(\"Dice rolling not yet available.\")}\r\n          >\r\n            🎲\r\n          </SC.ToggleLight>\r\n        )}\r\n        {showAll && url && props.groupName !== \"abilities\" && (\r\n          <SC.ToggleLight toggle={true}>\r\n            <a\r\n              href={url}\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <span role=\"image\">🔗</span>\r\n            </a>\r\n          </SC.ToggleLight>\r\n        )}\r\n      </div>\r\n      {showAll && props.description && (\r\n        <div\r\n          className=\"clickable\"\r\n          onClick={toggleShowAll}\r\n          style={{\r\n            marginLeft: \"0.1rem\",\r\n            fontSize: \"0.9rem\"\r\n          }}\r\n        >\r\n          <ReactMarkdown>{String(props.description)}</ReactMarkdown>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupListItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as server from \"../server\";\r\nimport GroupListItem from \"./GroupListItem\";\r\nimport * as SC from \"../styled\";\r\nimport * as utils from \"../utils\";\r\n\r\nconst isOdd = (n) => (n & 1) === 1;\r\n\r\nconst getCharHasList = (groupList, groupData) => {\r\n  let charHasList = [];\r\n  groupList.map((groupItemName) =>\r\n    groupData.map((groupItem) => {\r\n      if (groupItem.name === groupItemName) {\r\n        charHasList = [...charHasList, groupItem];\r\n      }\r\n    })\r\n  );\r\n  return charHasList;\r\n};\r\n\r\nconst GroupList = (props) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [errs, setErrs] = useState([]);\r\n\r\n  const [groupList, setGroupList] = useState(props.char[props.groupName]);\r\n  const [groupData, setGroupData] = useState(null);\r\n  const [groupTracker, setGroupTracker] = useState(null);\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [isAddingNewGroupItem, setIsAddingNewGroupItem] = useState(false);\r\n\r\n  const handleGroupTracker = () => {\r\n    switch (props.groupName) {\r\n      case \"gear\":\r\n        let maxLoad =\r\n          10 +\r\n          utils.getJSONFieldByName(props.char.abilities, \"Strength\", \"score\");\r\n        let currentLoad = getCharHasList(groupList, groupData)\r\n          .map((gear) => gear.weight || 0)\r\n          .reduce((a, b) => a + b, 0);\r\n        setGroupTracker(`${currentLoad}/${maxLoad}🎒`);\r\n        if (currentLoad > maxLoad) {\r\n          handleErrs(\"OVER_MAX\", \"ADD\");\r\n        }\r\n        break;\r\n      case \"spells\":\r\n        let maxSpellLevels = 1 + props.char.level;\r\n        let currentSpellLevels = getCharHasList(groupList, groupData)\r\n          .map((spell) => spell.level || 0)\r\n          .reduce((a, b) => a + b, 0);\r\n        setGroupTracker(`${currentSpellLevels}/${maxSpellLevels}✨`);\r\n        if (currentSpellLevels > maxSpellLevels) {\r\n          handleErrs(\"OVER_MAX\", \"ADD\");\r\n        } else {\r\n          handleErrs(\"OVER_MAX\", \"REMOVE\");\r\n        }\r\n        break;\r\n      case \"moves\":\r\n        setGroupTracker(getCharHasList(groupList, groupData).length);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const toggleEditMode = (e) => {\r\n    setEditMode(!editMode);\r\n  };\r\n\r\n  const handleErrs = (err, action) => {\r\n    let newErrs = errs;\r\n    if (action === \"ADD\" && !errs.includes(err)) {\r\n      newErrs = [...newErrs, err];\r\n    }\r\n\r\n    if (action === \"REMOVE\" && errs.includes(err)) {\r\n      newErrs = newErrs.filter((e) => e !== err);\r\n    }\r\n    setErrs(newErrs);\r\n  };\r\n\r\n  const handleUpdateScore = (action) => {\r\n    // console.log(action);\r\n    let newGroupData;\r\n    switch (action.message) {\r\n      case \"UPDATE\":\r\n        newGroupData = groupData;\r\n        for (let [i, g] of Object.entries(newGroupData)) {\r\n          if (g.name === action.target) {\r\n            newGroupData[i].score = action.newValue;\r\n          }\r\n        }\r\n        setGroupData(newGroupData);\r\n        break;\r\n      default:\r\n        console.error(\"action message not recognized: \", action.message);\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleUpdateGroupList = (action) => {\r\n    let newGroupList;\r\n    switch (action.message) {\r\n      case \"REMOVE\":\r\n        if (groupList.includes(action.newValue)) {\r\n          newGroupList = groupList.filter((e) => e !== action.newValue);\r\n        }\r\n        break;\r\n      case \"ADD\":\r\n        if (!groupList.includes(action.newValue)) {\r\n          newGroupList = [...groupList, action.newValue];\r\n        }\r\n        break;\r\n      default:\r\n        console.error(\"action message not recognized: \", action.message);\r\n        return;\r\n    }\r\n\r\n    // console.log(\"newGroupList\", newGroupList);\r\n    setGroupList(newGroupList);\r\n  };\r\n\r\n  const handleSaveChanges = () => {\r\n    if (errs[0]) {\r\n      setGroupList(props.char[props.groupName]);\r\n      return;\r\n    }\r\n    let newCharState = { ...props.char, [props.groupName]: groupList };\r\n    props.setChar(newCharState);\r\n    server.saveCharacterData(newCharState);\r\n    toggleEditMode();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoading && !groupData) {\r\n      const getAllChars = async () => {\r\n        // console.log(\"server.getGroupData(props.groupName)\");\r\n        let newGroupData = await server.getGroupData(props.groupName);\r\n        if (props.groupName === \"abilities\") {\r\n          newGroupData.data = props.char.abilities;\r\n        }\r\n        setGroupData(newGroupData.data);\r\n        setIsLoading(false);\r\n      };\r\n      getAllChars();\r\n    }\r\n\r\n    if (!isLoading) handleGroupTracker();\r\n  }, [editMode, props.char.level, isLoading, groupList, errs]);\r\n\r\n  return (\r\n    <div style={{}}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          marginRight: \"0.2rem\"\r\n        }}\r\n      >\r\n        <div className=\"group-item-label\" style={{ textAlign: \"center\" }}>\r\n          <b style={{ borderBottom: \"1px solid gray\", padding: \"0 2rem\" }}>\r\n            {String(props.groupName).toUpperCase()}\r\n          </b>\r\n        </div>\r\n        <div\r\n          style={{\r\n            padding: \"0.4rem 0.2rem\",\r\n            color: `${errs.includes(\"OVER_MAX\") ? \"red\" : \"black\"}`\r\n          }}\r\n        >\r\n          {groupTracker && groupTracker}\r\n        </div>\r\n        <SC.ToggleLight toggle={!editMode} onClick={() => toggleEditMode()}>\r\n          <span role=\"image\">{editMode ? \"❌\" : \"⚙️\"}</span>\r\n        </SC.ToggleLight>\r\n        {editMode && (\r\n          <SC.ToggleLight\r\n            toggle={errs.length === 0}\r\n            onClick={(e) => handleSaveChanges()}\r\n          >\r\n            <span role=\"image\">{errs[0] ? \"⛔\" : \"💾\"}</span>\r\n          </SC.ToggleLight>\r\n        )}\r\n      </div>\r\n      {!isLoading && (\r\n        <div className=\"fwmp\">\r\n          {!isAddingNewGroupItem &&\r\n            Object.values(groupData).map(\r\n              (groupItem) =>\r\n                (groupList.includes(groupItem.name) ||\r\n                  editMode ||\r\n                  props.groupName === \"abilities\") && (\r\n                  <div\r\n                    id={`group-list-item-container-${groupItem.name}`}\r\n                    key={`group-list-item-container-${groupItem.name}`}\r\n                    className=\"group-list-item-container\"\r\n                  >\r\n                    <GroupListItem\r\n                      groupName={props.groupName}\r\n                      labelValue={groupItem.name}\r\n                      subtitle={groupItem.level || \"\"}\r\n                      level={groupItem.level}\r\n                      price={groupItem.price}\r\n                      description={groupItem.description}\r\n                      source={groupItem.source || \"\"}\r\n                      webURL={groupItem.webURL || \"\"}\r\n                      playbooks={groupItem.playbooks || \"\"}\r\n                      rollWith={groupItem.rollWith || \"\"}\r\n                      editMode={editMode}\r\n                      handleUpdateGroupList={handleUpdateGroupList}\r\n                      handleUpdateScore={handleUpdateScore}\r\n                      hasItem={groupList.includes(groupItem.name)}\r\n                      type={groupItem.type || \"\"}\r\n                      tags={groupItem.tags || \"\"}\r\n                      weight={groupItem.weight || \"\"}\r\n                      score={groupItem.score || \"\"}\r\n                    />\r\n                  </div>\r\n                )\r\n            )}\r\n        </div>\r\n      )}\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupList;\r\n","import React, { useState, useReducer, useEffect } from \"react\";\r\nimport * as server from \"../server\";\r\n\r\nimport List from \"../components/List\";\r\nimport GroupList from \"../components/GroupList\";\r\nimport GroupListItem from \"../components/GroupListItem\";\r\n\r\nconst getJSONFieldByName = (obj, name, field) => {\r\n  let res;\r\n  obj.map((entry) => {\r\n    if (entry.name === name) {\r\n      res = entry[field];\r\n    }\r\n  });\r\n  return res;\r\n};\r\n\r\nconst xpNeeded = (level) => level * 7 + level;\r\n\r\nconst CharacterSheet = (props) => {\r\n  const [displayMode, setDisplayMode] = useState(\"compact\");\r\n  console.log(\"CharacterSheet -> props.abilities:\", props.abilities);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={displayMode}>\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            field=\"name\"\r\n            subtitle=\"Name\"\r\n            labelValue={props.char.name}\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            field=\"race\"\r\n            subtitle=\"Race\"\r\n            labelValue={props.char.race}\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            field=\"playbook\"\r\n            subtitle=\"Playbook\"\r\n            labelValue={props.char.playbook}\r\n            source={`${props.char.playbook}`}\r\n            webURL={props.char.webURL}\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            field=\"alignment\"\r\n            subtitle=\"Alignment\"\r\n            labelValue={props.char.alignment.name}\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            field=\"level\"\r\n            subtitle=\"Level\"\r\n            labelValue={props.char.level}\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            field=\"xp\"\r\n            subtitle=\"XP\"\r\n            labelValue={`${props.char.xp} / ${xpNeeded(props.char.level + 1)}`}\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"single-item-container\">\r\n          <GroupListItem\r\n            field=\"hp\"\r\n            subtitle=\"HP\"\r\n            labelValue={\r\n              props.char.basehp +\r\n              getJSONFieldByName(props.char.abilities, \"Constitution\", \"score\")\r\n            }\r\n            oneLine={true}\r\n          />\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <List\r\n        list={props.char.abilities}\r\n        handleSave={props.handleSave}\r\n        listName=\"abilities\"\r\n      />\r\n      {/* <GroupList\r\n        groupName=\"abilities\"\r\n        char={props.char}\r\n        setChar={props.setChar}\r\n      /> */}\r\n\r\n      <div style={{ padding: 0, margin: 0 }}>\r\n        <div className=\"group-item-labelValue\" style={{ textAlign: \"center\" }}>\r\n          <b style={{ borderBottom: \"1px solid gray\", padding: \"0 2rem\" }}>\r\n            BONDS\r\n          </b>\r\n        </div>\r\n\r\n        <div className=\"fwmp\">\r\n          {props.char.bonds.map((bond) => (\r\n            <div key={bond.description} className=\"single-item-container\">\r\n              <GroupListItem\r\n                subtitle={bond.description}\r\n                field=\"bonds\"\r\n                oneLine={true}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <br />\r\n\r\n      {/* <List\r\n        list={props.char.moves}\r\n        handleSave={props.handleSave}\r\n        listName=\"moves\"\r\n      /> */}\r\n\r\n      <GroupList groupName=\"moves\" char={props.char} setChar={props.setChar} />\r\n\r\n      <GroupList groupName=\"spells\" char={props.char} setChar={props.setChar} />\r\n\r\n      <GroupList groupName=\"gear\" char={props.char} setChar={props.setChar} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterSheet;\r\n","import React, { useState } from \"react\";\r\nimport * as server from \"../server\";\r\n\r\nconst UserSelect = (props) => {\r\n  const [isNewUser, setIsNewUser] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [newUserName, setNewUserName] = useState(\"\");\r\n\r\n  const toggleIsNewUser = () => setIsNewUser(!isNewUser);\r\n\r\n  const handleUserInput = (userName) => setNewUserName(userName);\r\n\r\n  const submitNewUser = async () => {\r\n    setIsSubmitting(true);\r\n    let allUsers = await server.submitNewUser(newUserName);\r\n    if (allUsers) {\r\n      props.setAllUsers(allUsers);\r\n      props.handleUserChange(newUserName);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ padding: \"1rem\", borderBottom: \"1px solid gray\" }}>\r\n        Accounts\r\n      </h3>\r\n      <div className=\"fwmp\">\r\n        {props.allUsers &&\r\n          props.allUsers.map((user) => (\r\n            <div\r\n              onClick={(e) => props.handleUserChange(user.userName)}\r\n              className=\"single-item-container clickable\"\r\n              key={Math.random()}\r\n            >\r\n              <b>{user.userName}</b>\r\n\r\n              <div>\r\n                {user.characters.map((character, i) => (\r\n                  <div className=\"indented\" key={Math.random()}>\r\n                    {character.name}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n        <div\r\n          onClick={toggleIsNewUser}\r\n          className={`single-item-container ${\r\n            isNewUser ? \"selected\" : \"unselected\"\r\n          }`}\r\n        >\r\n          New User\r\n        </div>\r\n      </div>\r\n      {isNewUser && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            minWidth: \"100vw\",\r\n            alignContent: \"center\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          <div className=\"single-item-container\">\r\n            <input\r\n              onChange={(e) => {\r\n                handleUserInput(e.target.value);\r\n              }}\r\n              style={{\r\n                margin: \"1rem 0\",\r\n                minWidth: \"99%\",\r\n                textAlign: \"center\"\r\n              }}\r\n              placeholder=\"User Name\"\r\n            />\r\n            <div\r\n              onClick={(e) => submitNewUser()}\r\n              className={`clickable ${isNewUser ? \"selected\" : \"unselected\"}`}\r\n              style={{\r\n                padding: \"1rem 0\",\r\n                minWidth: \"100%\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              CREATE\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSelect;\r\n","import React, { useState, useEffect } from \"react\";\nimport CharacterSheet from \"./views/CharacterSheet\";\nimport UserSelect from \"./views/UserSelect\";\n\nimport * as server from \"./server\";\n\nimport \"./styles.css\";\n\nexport default function App() {\n  const isSiteUpdating = false;\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [allUsers, setAllUsers] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [charName, setCharName] = useState(\"Levi\");\n  const [char, setChar] = useState(null);\n  const [userId, setUserId] = useState(null);\n\n  useEffect(() => {\n    if (isLoading && !allUsers) {\n      const getUsers = async () => {\n        let users = await server.getAllUsers();\n        console.log(\"setAllUsers: \", users);\n        setAllUsers(users);\n        setIsLoading(false);\n      };\n      getUsers();\n    }\n    // if (charName && allUsers) {\n    //   for (let [i, ch] of Object.entries(...allUsers)) {\n    //     if (ch.name === charName) {\n    //       console.log(\"setChar: \", ch);\n    //       setUserId(i);\n    //       setChar(ch);\n    //     }\n    //   }\n    // }\n  }, [charName, allUsers]);\n\n  const handleSave = async (field, newValue) => {\n    let newChar = char;\n    newChar[field] = newValue;\n    let data = await server.saveCharacterData(newChar);\n    console.log(data);\n    setChar(data);\n  };\n\n  const handleUserChange = (userName) => {\n    console.log(\"Searching for user: \", userName);\n    console.log(\"allUsers: \", allUsers);\n    for (let user of allUsers) {\n      console.log(\"user: \", user);\n      if (user.userName === userName) {\n        setCurrentUser(user);\n        console.log(\"setChar: \", user.characters[0]);\n        server.setUserId(user.id);\n        setChar(user.characters[0]);\n        setIsLoading(false);\n      }\n    }\n    // for (let user of allUsers) {\n    //   console.log(user);\n    //   if (user.userName === userName) {\n    //     console.log(\"matched! userName = \", user.userName);\n    //     setChar(user.characters[0]);\n    //     server.setUserId(user.id);\n    //   }\n    // }\n    // setUserId(newUserID)};\n  };\n  return (\n    <div>\n      {isSiteUpdating && <Alert />}\n\n      {currentUser && <div>User: {currentUser.userName}</div>}\n\n      {allUsers && !char && (\n        <UserSelect\n          allUsers={allUsers}\n          setAllUsers={setAllUsers}\n          handleUserChange={handleUserChange}\n        />\n      )}\n\n      {/* {userId && (\n        <div>\n          {allChars.map((chars) => {\n            return (\n              <div key={Math.random()}>\n                {chars.map((aChar) => {\n                  return (\n                    <div key={Math.random()} value={aChar.name}>\n                      {aChar.name}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      )} */}\n      {char && (\n        <CharacterSheet char={char} setChar={setChar} handleSave={handleSave} />\n      )}\n\n      {isLoading && <div>loading...</div>}\n    </div>\n  );\n}\n\nconst Alert = () => (\n  <div\n    style={{\n      backgroundColor: \"rgb(13, 30, 26)\",\n      color: \"darkorange\",\n      borderBottom: \"6px double orange\",\n      padding: \"1rem\"\n    }}\n  >\n    <span>{`ALERT: I'm logged in and am developing this site `}</span>\n    <span style={{ borderBottom: \"3px double gray\" }}>{`right now`}</span>.\n    <span>{` Things may be broken. If so, refresh or try again later.`}</span>\n  </div>\n);\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}